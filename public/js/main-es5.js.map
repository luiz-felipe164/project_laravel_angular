{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/post-dialog/post-dialog.component.ts","webpack:///src/app/post-dialog/post-dialog.component.html","webpack:///src/app/post.service.ts","webpack:///src/app/post.ts","webpack:///src/app/post/post.component.ts","webpack:///src/app/post/post.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","dialog","postService","posts","dialogRef","open","width","afterClosed","subscribe","result","save","post","arquivo","openDialog","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","entryComponents","bootstrap","PostDialogComponent","nomeArquivo","dados","event","target","files","name","close","mudouArquivo","cancel","PostService","http","get","p","push","nome","titulo","subtitulo","email","mensagem","likes","file","uploadData","FormData","append","reportProgress","observe","type","Response","addNewPost","body","res","find","i","findIndex","splice","providedIn","Post","PostComponent","like","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  public posts: Post[];\n\n  constructor(\n    public dialog: MatDialog,\n    public postService: PostService\n  ){}\n\n  ngOnInit() {\n    this.posts = this.postService.posts;\n  }\n\n  openDialog(){\n    const dialogRef = this.dialog.open(PostDialogComponent, {\n      width: '600px'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if(result){\n          this.postService.save(result.post, result.arquivo);\n        }\n      }\n    )\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>Projeto: Laravel + AngularJS</span>\n</mat-toolbar>\n\n<mat-divider></mat-divider>\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\">\n  <app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post>\n</div>\n\n<button mat-fab color=\"primary\" class=\"button-float\" (click)=\"openDialog()\">\n  <mat-icon>add</mat-icon>\n</button>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule } from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n  providers: [\n    \n  ],\n  entryComponents: [\n    PostDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  public nomeArquivo: String = '';\n\n  public dados = {\n    post: new Post(\"\", \"\", \"\", \"\", \"\"),\n    arquivo: null\n  };\n\n  constructor(\n    public dialogRef: MatDialogRef<PostDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  mudouArquivo(event){\n    //console.log(event)\n    this.nomeArquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  save(){\n    this.dialogRef.close(this.dados);\n  }\n\n  cancel(){\n    this.dialogRef.close(null);\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu nome\" [(ngModel)]=\"dados.post.nome\">\n            <mat-hint>Digite aqui seu nome</mat-hint>\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu email\" [(ngModel)]=\"dados.post.email\">\n            <mat-hint>Digite aqui seu email</mat-hint>\n        </mat-form-field>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Titulo da Mensagem\" [(ngModel)]=\"dados.post.titulo\">\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Subtitulo da mensagem\" [(ngModel)]=\"dados.post.subtitulo\">    \n        </mat-form-field>\n    </div>\n    <mat-form-field>\n        <textarea matInput placeholder=\"Deixe aqui sua mensagem\" [(ngModel)]=\"dados.post.mensagem\"></textarea>\n    </mat-form-field>\n</div>\n\n<input type=\"file\" style=\"display: none;\" (change)=\"mudouArquivo($event)\" #fileinput>\n\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\n    <mat-icon>add_a_photo</mat-icon>\n    Adicionar uma foto\n</button>\n<p *ngIf=\"nomeArquivo != ''\">Arquivo: <strong>{{nomeArquivo}}</strong></p>\n\n<br><br>\n\n<div style=\"text-align: center;\">\n    <button mat-button color=\"primary\" (click)=\"save()\">OK</button>\n    <button mat-button color=\"warn\" (click)=\"cancel()\">Cancelar</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  public posts: Post[] = [];\n\n  constructor(private http: HttpClient) { \n    this.http.get('/api').subscribe(\n      (posts: any[]) => {\n        for(let p of posts){\n          this.posts.push(\n            new Post(p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes)\n          );\n        }\n      }\n    );\n  }\n\n  save(post: Post, file: File){\n    const uploadData = new FormData();\n    uploadData.append('nome', post.nome);\n    uploadData.append('email', post.email);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file);\n\n    this.http.post('/api', uploadData, {reportProgress: true, observe: 'events'})\n      .subscribe((event: any) => {\n        if(event.type == HttpEventType.Response){\n          this.addNewPost(event.body);\n        }\n      })\n  }\n\n  addNewPost(body: any){\n    this.posts.push(\n      new Post(body.nome, body.titulo, body.subtitulo, body.email, body.mensagem, body.arquivo, body.id, body.likes)\n    );\n  }\n\n  like(id: number){\n    this.http.get('/api/like/' + id)\n      .subscribe((res: any) => {\n        let p = this.posts.find((p) => p.id == id);\n        p.likes = res.likes;\n      })\n  }\n\n  delete(id: number){\n    this.http.delete('/api/' + id)\n      .subscribe((event) => {\n        //console.log(event);\n        if(event == 204){\n          let i = this.posts.findIndex((p) => p.id == id);\n          if(i >= 0){\n            this.posts.splice(i, 1);\n          }\n        }\n      })\n  }\n}\n","export class Post {\n    constructor(\n        public nome: string,\n        public titulo: string,\n        public subtitulo: string,\n        public email: string,\n        public mensagem: string,\n        public arquivo?: string,\n        public id?: number,\n        public likes?: number\n    ){}\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor(\n    private postService: PostService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  like(){\n    this.postService.like(this.post.id);\n  }\n\n  delete(){\n    this.postService.delete(this.post.id);\n  }\n\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n      <div mat-card-avatar></div>\n      <mat-card-title>{{post.titulo}}</mat-card-title>\n      <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"/storage/{{post.arquivo}}\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n        {{post.mensagem}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button (click)=\"like()\">LIKE</button>\n      <button mat-button color=\"accent\" (click)=\"delete()\">DELETAR</button>\n      <mat-icon color=\"warn\" *ngIf=\"post.likes > 0\" matBadge=\"{{post.likes}}\" matBadgeColor=\"warn\" matBadgePosition=\"above after\" matBadgeOverlap=\"false\">favorite</mat-icon>\n    </mat-card-actions>\n  </mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}