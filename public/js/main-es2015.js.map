{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/post-dialog/post-dialog.component.ts","./src/app/post-dialog/post-dialog.component.html","./src/app/post.service.ts","./src/app/post.ts","./src/app/post/post.component.ts","./src/app/post/post.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0C;AAGgC;;;;;;;;;;;;ICGxE,yEAAwD;;;IAAtB,sEAAU;;ADKvC,MAAM,YAAY;IAIvB,YACS,MAAiB,EACjB,WAAwB;QADxB,WAAM,GAAN,MAAM,CAAW;QACjB,gBAAW,GAAX,WAAW,CAAa;IAC/B,CAAC;IAEH,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IACtC,CAAC;IAED,UAAU;QACR,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAmB,EAAE;YACtD,KAAK,EAAE,OAAO;SACf,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAC/B,CAAC,MAAM,EAAE,EAAE;YACT,IAAG,MAAM,EAAC;gBACR,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;aACpD;QACH,CAAC,CACF;IACH,CAAC;;wEAzBU,YAAY;4FAAZ,YAAY;QCXzB,iFACE;QAAA,uEAAM;QAAA,uFAA4B;QAAA,4DAAO;QAC3C,4DAAc;QAEd,yEAA2B;QAC3B,yEACE;QAAA,kHAA6C;QAC/C,4DAAM;QAEN,4EACE;QADmD,oIAAS,gBAAY,IAAC;QACzE,2EAAU;QAAA,8DAAG;QAAA,4DAAW;QAC1B,4DAAS;;QALG,0DAAuB;QAAvB,8EAAuB;;6FDKtB,YAAY;cALxB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,sBAAsB;gBACnC,SAAS,EAAE,CAAC,qBAAqB,CAAC;aACnC;;;;;;;;;;;;;;AEVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACjB;AACyB;AACW;AACrB;AACH;AACK;AACH;AACE;AACJ;AACM;AACJ;AACI;AACF;AACF;AAER;AACS;AACF;AACoB;;AAqCnE,MAAM,SAAS;;wFAAT,SAAS,cAFR,4DAAY;4IAEb,SAAS,mBART,EAEV,YAtBQ;YACP,uEAAa;YACb,4FAAuB;YACvB,0DAAW;YACX,kEAAmB;YACnB,qEAAgB;YAChB,sEAAgB;YAEhB,wEAAe;YACf,sEAAc;YACd,wEAAe;YACf,oEAAa;YACb,2EAAgB;YAChB,oEAAa;YACb,2EAAgB;YAChB,yEAAe;YACf,uEAAc;YACd,uEAAc;SAEf;mIASU,SAAS,mBAhClB,4DAAY;QACZ,mEAAa;QACb,uFAAmB,aAGnB,uEAAa;QACb,4FAAuB;QACvB,0DAAW;QACX,kEAAmB;QACnB,qEAAgB;QAChB,sEAAgB;QAEhB,wEAAe;QACf,sEAAc;QACd,wEAAe;QACf,oEAAa;QACb,2EAAgB;QAChB,oEAAa;QACb,2EAAgB;QAChB,yEAAe;QACf,uEAAc;QACd,uEAAc;6FAWL,SAAS;cAlCrB,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,4DAAY;oBACZ,mEAAa;oBACb,uFAAmB;iBACpB;gBACD,OAAO,EAAE;oBACP,uEAAa;oBACb,4FAAuB;oBACvB,0DAAW;oBACX,kEAAmB;oBACnB,qEAAgB;oBAChB,sEAAgB;oBAEhB,wEAAe;oBACf,sEAAc;oBACd,wEAAe;oBACf,oEAAa;oBACb,2EAAgB;oBAChB,oEAAa;oBACb,2EAAgB;oBAChB,yEAAe;oBACf,uEAAc;oBACd,uEAAc;iBAEf;gBACD,SAAS,EAAE,EAEV;gBACD,eAAe,EAAE;oBACf,uFAAmB;iBACpB;gBACD,SAAS,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACvDD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEnB;;;;;;;;;;;IC4B/B,oEAA6B;IAAA,oEAAS;IAAA,yEAAQ;IAAA,uDAAe;IAAA,4DAAS;IAAA,4DAAI;;;IAA5B,0DAAe;IAAf,mFAAe;;ADrBtD,MAAM,mBAAmB;IAS9B,YACS,SAA4C;QAA5C,cAAS,GAAT,SAAS,CAAmC;QAR9C,gBAAW,GAAW,EAAE,CAAC;QAEzB,UAAK,GAAG;YACb,IAAI,EAAE,IAAI,0CAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;YAClC,OAAO,EAAE,IAAI;SACd,CAAC;IAGuD,CAAC;IAE1D,QAAQ;IACR,CAAC;IAED,YAAY,CAAC,KAAK;QAChB,oBAAoB;QACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED,IAAI;QACF,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACnC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;;sFA3BU,mBAAmB;mGAAnB,mBAAmB;;QCThC,yEACI;QAAA,yEACI;QAAA,oFACI;QAAA,2EACA;QADuC,gMAA6B;QAApE,4DACA;QAAA,2EAAU;QAAA,+EAAoB;QAAA,4DAAW;QAC7C,4DAAiB;QACjB,oFACI;QAAA,2EACA;QADwC,iMAA8B;QAAtE,4DACA;QAAA,2EAAU;QAAA,gFAAqB;QAAA,4DAAW;QAC9C,4DAAiB;QACrB,4DAAM;QACN,0EACI;QAAA,qFACI;QAAA,4EACJ;QADqD,mMAA+B;QAAhF,4DACJ;QAAA,4DAAiB;QACjB,qFACI;QAAA,4EACJ;QADwD,sMAAkC;QAAtF,4DACJ;QAAA,4DAAiB;QACrB,4DAAM;QACN,kFACI;QAAA,+EAAsG;QAA7C,wMAAiC;QAAC,4DAAW;QAC1G,4DAAiB;QACrB,4DAAM;QAEN,gFAEA;QAF0C,mJAAU,wBAAoB,IAAC;QAAzE,4DAEA;QAAA,8EACI;QADuC,yRAAS,WAAiB,IAAC;QAClE,4EAAU;QAAA,uEAAW;QAAA,4DAAW;QAChC,iFACJ;QAAA,4DAAS;QACT,8GAA6B;QAE7B,iEAAI;QAAA,iEAEJ;QAAA,2EACI;QAAA,8EAAoD;QAAjB,4IAAS,UAAM,IAAC;QAAC,8DAAE;QAAA,4DAAS;QAC/D,8EAAmD;QAAnB,4IAAS,YAAQ,IAAC;QAAC,oEAAQ;QAAA,4DAAS;QACxE,4DAAM;;QAlC6C,0DAA6B;QAA7B,wFAA6B;QAI5B,0DAA8B;QAA9B,yFAA8B;QAMrB,0DAA+B;QAA/B,0FAA+B;QAG5B,0DAAkC;QAAlC,6FAAkC;QAIjC,0DAAiC;QAAjC,4FAAiC;QAU/F,0DAAyB;QAAzB,uFAAyB;;6FDrBf,mBAAmB;cAL/B,uDAAS;eAAC;gBACT,QAAQ,EAAE,iBAAiB;gBAC3B,WAAW,EAAE,8BAA8B;gBAC3C,SAAS,EAAE,CAAC,6BAA6B,CAAC;aAC3C;;;;;;;;;;;;;;AERD;AAAA;AAAA;AAAA;AAAA;AAA2C;AACiC;AAC9C;;;AAKvB,MAAM,WAAW;IAItB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF7B,UAAK,GAAW,EAAE,CAAC;QAGxB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,SAAS,CAC7B,CAAC,KAAY,EAAE,EAAE;YACf,KAAI,IAAI,CAAC,IAAI,KAAK,EAAC;gBACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,0CAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,KAAK,CAAC,CACvF,CAAC;aACH;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,IAAU,EAAE,IAAU;QACzB,MAAM,UAAU,GAAG,IAAI,QAAQ,EAAE,CAAC;QAClC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACvC,UAAU,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACzC,UAAU,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/C,UAAU,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7C,UAAU,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAEnC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAU,EAAE,EAAC,cAAc,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,EAAC,CAAC;aAC1E,SAAS,CAAC,CAAC,KAAU,EAAE,EAAE;YACxB,IAAG,KAAK,CAAC,IAAI,IAAI,kEAAa,CAAC,QAAQ,EAAC;gBACtC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC;IACN,CAAC;IAED,UAAU,CAAC,IAAS;QAClB,IAAI,CAAC,KAAK,CAAC,IAAI,CACb,IAAI,0CAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAC/G,CAAC;IACJ,CAAC;IAED,IAAI,CAAC,EAAU;QACb,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,EAAE,CAAC;aAC7B,SAAS,CAAC,CAAC,GAAQ,EAAE,EAAE;YACtB,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;YAC3C,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC;QACtB,CAAC,CAAC;IACN,CAAC;IAED,MAAM,CAAC,EAAU;QACf,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC;aAC3B,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,qBAAqB;YACrB,IAAG,KAAK,IAAI,GAAG,EAAC;gBACd,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;gBAChD,IAAG,CAAC,IAAI,CAAC,EAAC;oBACR,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;iBACzB;aACF;QACH,CAAC,CAAC;IACN,CAAC;;sEA1DU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;6FAEP,WAAW;cAHvB,wDAAU;eAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;;;;;;;;;;;ACND;AAAA;AAAO,MAAM,IAAI;IACb,YACW,IAAY,EACZ,MAAc,EACd,SAAiB,EACjB,KAAa,EACb,QAAgB,EAChB,OAAgB,EAChB,EAAW,EACX,KAAc;QAPd,SAAI,GAAJ,IAAI,CAAQ;QACZ,WAAM,GAAN,MAAM,CAAQ;QACd,cAAS,GAAT,SAAS,CAAQ;QACjB,UAAK,GAAL,KAAK,CAAQ;QACb,aAAQ,GAAR,QAAQ,CAAQ;QAChB,YAAO,GAAP,OAAO,CAAS;QAChB,OAAE,GAAF,EAAE,CAAS;QACX,UAAK,GAAL,KAAK,CAAS;IACvB,CAAC;CACN;;;;;;;;;;;;;ACXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyD;;;;;;;;;;ICenD,8EAAoJ;IAAA,mEAAQ;IAAA,4DAAW;;;IAAzH,kGAAyB;;ADNtE,MAAM,aAAa;IAIxB,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAC9B,CAAC;IAEL,QAAQ;IACR,CAAC;IAED,IAAI;QACF,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACtC,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC,CAAC;;0EAjBU,aAAa;6FAAb,aAAa;QCT1B,8EACI;QAAA,kFACE;QAAA,oEAA2B;QAC3B,iFAAgB;QAAA,uDAAe;QAAA,4DAAiB;QAChD,oFAAmB;QAAA,uDAAkB;QAAA,4DAAoB;QAC3D,4DAAkB;QAClB,oEACA;QAAA,mFACE;QAAA,oEACE;QAAA,wDACF;QAAA,4DAAI;QACN,4DAAmB;QACnB,oFACE;QAAA,6EAAoC;QAAjB,sIAAS,UAAM,IAAC;QAAC,gEAAI;QAAA,4DAAS;QACjD,6EAAqD;QAAnB,sIAAS,YAAQ,IAAC;QAAC,mEAAO;QAAA,4DAAS;QACrE,qHAAoJ;QACtJ,4DAAmB;QACrB,4DAAW;;QAdS,0DAAe;QAAf,gFAAe;QACZ,0DAAkB;QAAlB,mFAAkB;QAEnB,0DAA+B;QAA/B,2KAA+B;QAG/C,0DACF;QADE,6FACF;QAKuB,0DAAsB;QAAtB,oFAAsB;;6FDNtC,aAAa;cALzB,uDAAS;eAAC;gBACT,QAAQ,EAAE,UAAU;gBACpB,WAAW,EAAE,uBAAuB;gBACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;aACpC;;kBAGE,mDAAK;;;;;;;;;;;;;;AEXR;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAIU;;;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,gBAAgB,CAAC,0DAAU;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { Post } from './post';\nimport { MatDialog } from '@angular/material/dialog';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\nimport { PostService } from './post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  public posts: Post[];\n\n  constructor(\n    public dialog: MatDialog,\n    public postService: PostService\n  ){}\n\n  ngOnInit() {\n    this.posts = this.postService.posts;\n  }\n\n  openDialog(){\n    const dialogRef = this.dialog.open(PostDialogComponent, {\n      width: '600px'\n    });\n\n    dialogRef.afterClosed().subscribe(\n      (result) => {\n        if(result){\n          this.postService.save(result.post, result.arquivo);\n        }\n      }\n    )\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <span>Projeto: Laravel + AngularJS</span>\n</mat-toolbar>\n\n<mat-divider></mat-divider>\n<div fxLayout=\"row wrap\" fxLayoutAlign=\"space-around stretch\">\n  <app-post *ngFor=\"let p of posts\" [post]=\"p\"></app-post>\n</div>\n\n<button mat-fab color=\"primary\" class=\"button-float\" (click)=\"openDialog()\">\n  <mat-icon>add</mat-icon>\n</button>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule } from '@angular/material/button';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { PostComponent } from './post/post.component';\nimport { PostDialogComponent } from './post-dialog/post-dialog.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostComponent,\n    PostDialogComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n\n  ],\n  providers: [\n    \n  ],\n  entryComponents: [\n    PostDialogComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","import { Component, OnInit } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Post } from '../post';\n\n@Component({\n  selector: 'app-post-dialog',\n  templateUrl: './post-dialog.component.html',\n  styleUrls: ['./post-dialog.component.css']\n})\nexport class PostDialogComponent implements OnInit {\n\n  public nomeArquivo: String = '';\n\n  public dados = {\n    post: new Post(\"\", \"\", \"\", \"\", \"\"),\n    arquivo: null\n  };\n\n  constructor(\n    public dialogRef: MatDialogRef<PostDialogComponent>) { }\n\n  ngOnInit(): void {\n  }\n\n  mudouArquivo(event){\n    //console.log(event)\n    this.nomeArquivo = event.target.files[0].name;\n    this.dados.arquivo = event.target.files[0];\n  }\n\n  save(){\n    this.dialogRef.close(this.dados);\n  }\n\n  cancel(){\n    this.dialogRef.close(null);\n  }\n}\n","<div fxLayout=\"column\" fxLayoutAlign=\"space-around left\">\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Seu nome\" [(ngModel)]=\"dados.post.nome\">\n            <mat-hint>Digite aqui seu nome</mat-hint>\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Seu email\" [(ngModel)]=\"dados.post.email\">\n            <mat-hint>Digite aqui seu email</mat-hint>\n        </mat-form-field>\n    </div>\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between\">\n        <mat-form-field fxFlex=\"50\">\n            <input matInput placeholder=\"Titulo da Mensagem\" [(ngModel)]=\"dados.post.titulo\">\n        </mat-form-field>\n        <mat-form-field fxFlex=\"40\">\n            <input matInput placeholder=\"Subtitulo da mensagem\" [(ngModel)]=\"dados.post.subtitulo\">    \n        </mat-form-field>\n    </div>\n    <mat-form-field>\n        <textarea matInput placeholder=\"Deixe aqui sua mensagem\" [(ngModel)]=\"dados.post.mensagem\"></textarea>\n    </mat-form-field>\n</div>\n\n<input type=\"file\" style=\"display: none;\" (change)=\"mudouArquivo($event)\" #fileinput>\n\n<button mat-stroked-button color=\"primary\" (click)=\"fileinput.click()\">\n    <mat-icon>add_a_photo</mat-icon>\n    Adicionar uma foto\n</button>\n<p *ngIf=\"nomeArquivo != ''\">Arquivo: <strong>{{nomeArquivo}}</strong></p>\n\n<br><br>\n\n<div style=\"text-align: center;\">\n    <button mat-button color=\"primary\" (click)=\"save()\">OK</button>\n    <button mat-button color=\"warn\" (click)=\"cancel()\">Cancelar</button>\n</div>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent, HttpEventType } from '@angular/common/http';\nimport { Post } from './post';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  public posts: Post[] = [];\n\n  constructor(private http: HttpClient) { \n    this.http.get('/api').subscribe(\n      (posts: any[]) => {\n        for(let p of posts){\n          this.posts.push(\n            new Post(p.nome, p.titulo, p.subtitulo, p.email, p.mensagem, p.arquivo, p.id, p.likes)\n          );\n        }\n      }\n    );\n  }\n\n  save(post: Post, file: File){\n    const uploadData = new FormData();\n    uploadData.append('nome', post.nome);\n    uploadData.append('email', post.email);\n    uploadData.append('titulo', post.titulo);\n    uploadData.append('subtitulo', post.subtitulo);\n    uploadData.append('mensagem', post.mensagem);\n    uploadData.append('arquivo', file);\n\n    this.http.post('/api', uploadData, {reportProgress: true, observe: 'events'})\n      .subscribe((event: any) => {\n        if(event.type == HttpEventType.Response){\n          this.addNewPost(event.body);\n        }\n      })\n  }\n\n  addNewPost(body: any){\n    this.posts.push(\n      new Post(body.nome, body.titulo, body.subtitulo, body.email, body.mensagem, body.arquivo, body.id, body.likes)\n    );\n  }\n\n  like(id: number){\n    this.http.get('/api/like/' + id)\n      .subscribe((res: any) => {\n        let p = this.posts.find((p) => p.id == id);\n        p.likes = res.likes;\n      })\n  }\n\n  delete(id: number){\n    this.http.delete('/api/' + id)\n      .subscribe((event) => {\n        //console.log(event);\n        if(event == 204){\n          let i = this.posts.findIndex((p) => p.id == id);\n          if(i >= 0){\n            this.posts.splice(i, 1);\n          }\n        }\n      })\n  }\n}\n","export class Post {\n    constructor(\n        public nome: string,\n        public titulo: string,\n        public subtitulo: string,\n        public email: string,\n        public mensagem: string,\n        public arquivo?: string,\n        public id?: number,\n        public likes?: number\n    ){}\n}","import { Component, OnInit, Input } from '@angular/core';\nimport { Post } from '../post';\nimport { PostService } from '../post.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n\n  @Input() post: Post;\n\n  constructor(\n    private postService: PostService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  like(){\n    this.postService.like(this.post.id);\n  }\n\n  delete(){\n    this.postService.delete(this.post.id);\n  }\n\n}\n","<mat-card fxFlex class=\"card\">\n    <mat-card-header>\n      <div mat-card-avatar></div>\n      <mat-card-title>{{post.titulo}}</mat-card-title>\n      <mat-card-subtitle>{{post.subtitulo}}</mat-card-subtitle>\n    </mat-card-header>\n    <img mat-card-image src=\"/storage/{{post.arquivo}}\" alt=\"Photo of a Shiba Inu\">\n    <mat-card-content>\n      <p>\n        {{post.mensagem}}\n      </p>\n    </mat-card-content>\n    <mat-card-actions>\n      <button mat-button (click)=\"like()\">LIKE</button>\n      <button mat-button color=\"accent\" (click)=\"delete()\">DELETAR</button>\n      <mat-icon color=\"warn\" *ngIf=\"post.likes > 0\" matBadge=\"{{post.likes}}\" matBadgeColor=\"warn\" matBadgePosition=\"above after\" matBadgeOverlap=\"false\">favorite</mat-icon>\n    </mat-card-actions>\n  </mat-card>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}